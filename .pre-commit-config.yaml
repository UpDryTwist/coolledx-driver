exclude: ^(poetry.lock|.idea/|.vscode/)
repos:

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.2
    hooks:
      - id: ruff
        args: [ --fix, --exit-non-zero-on-fix, --show-fixes ]
      - id: ruff-format

  #- repo: https://github.com/python/black.git
  #  rev: 23.12.1
  #  hooks:
  #    - id: black
  #      language_version: python3

  - repo: https://github.com/adamchainz/blacken-docs
    rev: 1.19.1
    hooks:
      - id: blacken-docs
        additional_dependencies:
          - "black==23.12.1"
        args:
          - "--line-length=88"

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-builtin-literals
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-shebang-scripts-are-executable
      - id: check-merge-conflict
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: destroyed-symlinks
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: ^LICENSE|\.(html|csv|txt|svg|py|png|gif)$
      - id: pretty-format-json
        args: [ "--autofix", "--no-ensure-ascii", "--no-sort-keys" ]
      - id: requirements-txt-fixer
      - id: trailing-whitespace
        args: [ --markdown-linebreak-ext=md ]
        exclude: \.(html|svg|png|gif)$

  - repo: https://github.com/fredrikaverpil/creosote.git
    rev: v3.2.0
    hooks:
      - id: creosote
        additional_dependencies:
          - tomli

  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        additional_dependencies:
          - tomli

  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.390
    hooks:
      - id: pyright

  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v9.19.0
    hooks:
      - id: commitlint
        stages: [ commit-msg ]
        additional_dependencies: [ "@commitlint/config-conventional" ]

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.4
    hooks:
      # Note:  this requires that you install actionlint as a system command
      #        . . . so it's currently only running in the manual checks
      - id: actionlint-system
        stages: [ manual ]

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: shellcheck

  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.10.0-2
    hooks:
      - id: shfmt-docker

  - repo: local
    hooks:
      - id: powershell-script-analyzer
        name: PowerShell Script Analyzer
        entry: pwsh -Command "
          if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
          Write-Host 'Installing PSScriptAnalyzer...';
          try {
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser -ErrorAction Stop;
          Write-Host 'PSScriptAnalyzer installed successfully.';
          } catch {
          Write-Error 'Failed to install PSScriptAnalyzer.';
          exit 1;
          }
          }
          $DirectoriesToScan = @( '.utils' );
          $DirectoriesToScan | ForEach-Object {
          if (Test-Path $_) {
          Get-ChildItem -Path $_ -Filter *.ps1 -Recurse |
          ForEach-Object {
          $results = Invoke-ScriptAnalyzer -Path $_.FullName;
          if ($results) {
          Write-Output $results;
          exit 1;
          }
          }
          }
          }"
        language: system
        types: [ powershell ]
        pass_filenames: false
