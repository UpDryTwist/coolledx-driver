exclude: ^(poetry.lock|.idea/|.vscode/)
repos:

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.0
    hooks:
      - id: ruff
        # --exit-non-zero-on-fix (break build if made changes)
        args: [ --fix, --show-fixes ]
      - id: ruff-format

  - repo: https://github.com/adamchainz/blacken-docs
    rev: 1.20.0
    hooks:
      - id: blacken-docs
        additional_dependencies:
          - "black==23.12.1"
        args:
          - "--line-length=88"

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [ "-c", "pyproject.toml", "-r", "." ]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-builtin-literals
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-illegal-windows-names
      - id: check-shebang-scripts-are-executable
      - id: check-merge-conflict
        args: [ --assume-in-merge ]
      - id: check-symlinks
      - id: check-vcs-permalinks
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: destroyed-symlinks
      - id: detect-private-key
      # - id: detect-aws-credentials
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: ^LICENSE|\.(html|csv|txt|svg|py|png|gif)$
      - id: pretty-format-json
        args: [ "--autofix", "--no-ensure-ascii", "--no-sort-keys" ]
      - id: forbid-submodules
      - id: mixed-line-ending
        args: [ --fix=lf ]
      - id: requirements-txt-fixer
      - id: name-tests-test
        args: [ --pytest-test-first ]
      - id: trailing-whitespace
        args: [ --markdown-linebreak-ext=md ]
        exclude: \.(html|svg|png|gif)$

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-check-mock-methods
      - id: python-no-eval
      - id: python-no-log-warn
      - id: python-use-type-annotations
      - id: text-unicode-replacement-char

  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.37.1
    hooks:
      - id: yamllint

  - repo: https://github.com/fredrikaverpil/creosote.git
    rev: v4.1.0
    hooks:
      - id: creosote
        additional_dependencies:
          - tomli

  - repo: https://github.com/mxr/sync-pre-commit-deps
    rev: v0.0.3
    hooks:
      - id: sync-pre-commit-deps

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        args: [ --py311-plus ]

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.2.0
    hooks:
      - id: add-trailing-comma

  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        additional_dependencies:
          - tomli

  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.405
    hooks:
      - id: pyright

  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v9.22.0
    hooks:
      - id: commitlint
        stages: [ commit-msg ]
        additional_dependencies: [ "@commitlint/config-conventional" ]

  - repo: https://github.com/thoughtworks/talisman
    rev: v1.37.0
    hooks:
      - id: talisman-commit
        entry: cmd --githook pre-commit
      - id: talisman-commit

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      # Note:  this requires that you install actionlint as a system command
      #        . . . so it's currently only running in the manual checks
      - id: actionlint-system
        stages: [ manual ]

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: shellcheck
      - id: git-check

  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.12.0-2
    hooks:
      - id: shfmt

  # - repo: local
  #   hooks:
  #     - id: powershell-script-analyzer
  #       name: PowerShell Script Analyzer
  #       entry: pwsh -Command "
  #         if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
  #         Write-Host 'Installing PSScriptAnalyzer...';
  #         try {
  #         Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser -ErrorAction Stop;
  #         Write-Host 'PSScriptAnalyzer installed successfully.';
  #         } catch {
  #         Write-Error 'Failed to install PSScriptAnalyzer.';
  #         exit 1;
  #         }
  #         }
  #         $DirectoriesToScan = @( '.utils' );
  #         $DirectoriesToScan | ForEach-Object {
  #         if (Test-Path $_) {
  #         Get-ChildItem -Path $_ -Filter *.ps1 -Recurse |
  #         ForEach-Object {
  #         $results = Invoke-ScriptAnalyzer -Path $_.FullName;
  #         if ($results) {
  #         Write-Output $results;
  #         exit 1;
  #         }
  #         }
  #         }
  #         }"
  #       language: system
  #       types: [ powershell ]
  #       pass_filenames: false
